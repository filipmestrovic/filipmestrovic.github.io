{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","name","marginRight","minWidth","borderRadius","imgStyle","summary","href","linkedin","BlogPostTemplate","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","featuredImgFluid","frontmatter","featuredImage","fluid","description","excerpt","marginTop","dangerouslySetInnerHTML","__html","html","scale","date","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2rDAqEeA,IAxDH,WACV,IAAMC,EAAI,OADM,EAwBWA,EAAKC,KAAKC,aAA7BC,EAxBQ,EAwBRA,OAAQC,EAxBA,EAwBAA,OAChB,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CACEC,MAAOT,EAAKU,OAAOC,gBAAgBF,MACnCG,IAAKT,EAAOU,KACZR,MAAO,CACLS,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,2BACE,gCAASb,EAAOU,MADlB,IACkCV,EAAOe,QADzC,IAGE,uBAAGC,KAAI,+BAAiCf,EAAOgB,UAA/C,gC,uMC0BOC,UA9EU,SAAC,GAAmC,IAAD,EAAjCrB,EAAiC,EAAjCA,KAAMsB,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACpCC,EAAOxB,EAAKyB,eACZC,EAAY1B,EAAKC,KAAKC,aAAayB,MAClCC,EAAkBN,EAAlBM,SAAUC,EAAQP,EAARO,KACXC,EAAgB,UAAGN,EAAKO,YAAYC,qBAApB,aAAG,EAAgCrB,gBAAgBsB,MAEzE,OACI,kBAAC,IAAD,CAAQV,SAAUA,EAAUI,MAAOD,GAC/B,kBAAC,IAAD,CACIC,MAAOH,EAAKO,YAAYJ,MACxBO,YAAaV,EAAKO,YAAYG,aAAeV,EAAKW,UAEtD,iCACI,gCACI,wBACI9B,MAAO,CACH+B,UAAW5B,YAAO,GAClBD,aAAcC,YAAO,KAGxBgB,EAAKO,YAAYJ,OAErBG,GAAoB,kBAAC,IAAD,CACjBzB,MAAO,CACHE,aAAcC,YAAO,IAEzByB,MAAOH,KAEf,6BAASO,wBAAyB,CAACC,OAAQd,EAAKe,QAChD,uBACIlC,MAAK,iBACEmC,aAAM,IADR,CAEDlC,QAAQ,QACRC,aAAcC,YAAO,MAGxBgB,EAAKO,YAAYU,MAEtB,wBACIpC,MAAO,CACHE,aAAcC,YAAO,MAG7B,gCACI,kBAAC,IAAD,QAIR,6BACI,wBACIH,MAAO,CACHC,QAAQ,OACRoC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGb,4BACKjB,GACG,kBAAC,OAAD,CAAMkB,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACOrB,EAASG,YAAYJ,QAIpC,4BACKE,GACG,kBAAC,OAAD,CAAMiB,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC3BpB,EAAKE,YAAYJ,MADtB,WAarB,IAAMuB,EAAS","file":"component---src-templates-blog-post-js-523d45c8af8db3da368d.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            linkedin\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        <strong>{author.name}</strong> {author.summary}\n        {` `}\n        <a href={`https://www.linkedin.com/in/${social.linkedin}`}>\n            Talk to him on LinkedIn!\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport {Link, graphql} from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {rhythm, scale} from \"../utils/typography\"\nimport Img from \"gatsby-image\"\n\nconst BlogPostTemplate = ({data, pageContext, location}) => {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata.title\n    const {previous, next} = pageContext\n    const featuredImgFluid = post.frontmatter.featuredImage?.childImageSharp.fluid\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n            />\n            <article>\n                <header>\n                    <h1\n                        style={{\n                            marginTop: rhythm(1),\n                            marginBottom: rhythm(1),\n                        }}\n                    >\n                        {post.frontmatter.title}\n                    </h1>\n                    {featuredImgFluid && <Img\n                        style={{\n                            marginBottom: rhythm(1),\n                        }}\n                        fluid={featuredImgFluid}/>}\n                </header>\n                <section dangerouslySetInnerHTML={{__html: post.html}}/>\n                <p\n                    style={{\n                        ...scale(-1 / 5),\n                        display: `block`,\n                        marginBottom: rhythm(0),\n                    }}\n                >\n                    {post.frontmatter.date}\n                </p>\n                <hr\n                    style={{\n                        marginBottom: rhythm(1),\n                    }}\n                />\n                <footer>\n                    <Bio/>\n                </footer>\n            </article>\n\n            <nav>\n                <ul\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Layout>\n    )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}